import socket
from termcolor import cprint
from Libs.glo import *
init()
import time
import re
import chardet

probes = get_value('probes')
logger = get_value('logger')
serviceRE = get_value('serviceRE')


def match(result):
    try:
        eachSign = []
        for each in serviceRE:
            ret = re.findall(bytes(each[1].encode('utf-8')), result)
            if ret:
                eachSign.append(each[0])
        return list(set(eachSign))
    except Exception as e:
        print(e)

socket.setdefaulttimeout(1)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.settimeout(1)
address = ('149.28.42.95', 6379)
try:
    s.connect(address)
    result = s.recv(256)
    eachSign = match(result)
    print(eachSign) # b'\x15\x03\x01\x00\x02\x02\n'
except Exception as e:
    print(e)
    # for probe in probes:
    #     try:
    #         s.sendall(bytes(probe.encode('utf-8')))
    #     except Exception as e:
    #         print('1{}'.format(e))
    #         continue
    #     try:
    #         cprint(bytes(probe.encode('utf-8')), 'yellow')
    #         result = s.recv(256)
    #         print(result)
    #         # logger.info(result.decode('utf-8'))
    #         eachSign = match(result)
    #         print(eachSign)
    #     except Exception as e:
    #         print('2{}'.format(e))
    #         continue

