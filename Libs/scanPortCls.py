#-*- coding:utf-8 -*-
from Libs.glo import *
import threading
import socket
import gevent


event = getThrEvent()
logger = get_value('logger')
pyVersion = get_value('pyVersion')
ports_protocols = get_value('ports_protocols')

class scanPortMultiThr(threading.Thread):
    def __init__(self, q, num, ports):
        threading.Thread.__init__(self)
        self.q = q
        self.num = num
        self.ports = ports

    def scan_ports(self, tgtIp, tgtPort):
        protocol = ports_protocols[tgtPort] if tgtPort in ports_protocols.keys() else 'unknow'
        socket.setdefaulttimeout(1)  # 0.01恰好
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        address = (tgtIp, int(tgtPort))
        try:
            s.connect(address)
            logger.info('[+] {} open [{}] protcol:{}'.format(tgtIp, tgtPort, protocol))
            addIpOpenPort(tgtIp, tgtPort)
            # print('[+] 第[{}:{}]条进程 {} : open [{}] protcol:{}'.format(self.num, pid, tgtIp, tgtPort, protocol))
            s.close()
        except Exception as e:
            # logger.info('[-] {} closed [{}]'.format(tgtIp, tgtPort))
            s.close()


    # 协程扫描列表里的所有端口
    def gev(self, tgtIp):
        jobs = [gevent.spawn(self.scan_ports, tgtIp, tgtPort) for tgtPort in self.ports]
        gevent.joinall(jobs)

    #多线程完成扫描多个IP
    def run(self):
        while event.is_set():
            if self.q.empty():
                break
            else:
                tgtIp = self.q.get()
                self.gev(tgtIp)